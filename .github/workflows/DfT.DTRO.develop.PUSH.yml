name: DfT.DTRO (Push)

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - hotfix/**
      - DPPB-**
    paths:
      - '!README.md'
      - '!**/README.MD'
      - '**/**.cs'
      - '**/**.json'
      - 'terraform/**'

jobs:

  deploy:
    runs-on: ubuntu-latest
    env:
      # DB credentials for integration tests
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: data

    steps:
    - uses: actions/checkout@v2
    - name: Setup Postgres Database for tests
      run: docker compose -f docker/dev/docker-compose.yml up -d
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Build
      run: make build-test
      env:
        Postgres__Host: localhost
        Postgres__User: ${{ env.POSTGRES_USER }}
        Postgres__Password: ${{ env.POSTGRES_PASSWORD }}
        Postgres__DbName: ${{ env.POSTGRES_DB }}
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: 1.4.6
    - name: Terraform init
      run: make init
      env:
        DEPLOY_ENVIRONMENT: default
    - name: Deploy
      run: |
        gcloud auth configure-docker europe-west2-docker.pkg.dev
        make deploy
      env:
        DEPLOY_ENVIRONMENT: default
    - name: Run Postgres database migrations
      run: |
        gcloud run jobs execute dtro-postgres-migrations --region europe-west2 --wait
      env:
        DEPLOY_ENVIRONMENT: default
    - name: Find and delete untagged migration job images
      run: |
        gcloud artifacts docker images list \
          --include-tags \
          --filter='-tags:*' \
          --format='get(version)' \
          --limit=unlimited \
          $IMAGE_REPOSITORY |
          xargs -I '{}' gcloud artifacts docker images delete $IMAGE_REPOSITORY@{} --async --quiet
      env:
        IMAGE_REPOSITORY: europe-west2-docker.pkg.dev/dtro-prototype/dtro/dtro-prototype-postgres-migrations-job
